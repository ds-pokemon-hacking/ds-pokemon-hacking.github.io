"use strict";(self.webpackChunkkodsh_wiki_new=self.webpackChunkkodsh_wiki_new||[]).push([[6864],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function d(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(i.Provider,{value:t},e.children)}},58121:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"generation-iv/resources/hgss-town_map_spots/hgss-town_map_spots","title":"Town Map Spots","description":"These structures are used to describe the Town Map selectable structures in Heart Gold and Soul Silver as they appear baked into Overlay 101.  See Editing the Town Map for more information.","source":"@site/docs/generation-iv/resources/hgss-town_map_spots/hgss-town_map_spots.md","sourceDirName":"generation-iv/resources/hgss-town_map_spots","slug":"/generation-iv/resources/hgss-town_map_spots/","permalink":"/docs/generation-iv/resources/hgss-town_map_spots/","draft":false,"unlisted":false,"editUrl":"https://github.com/ds-pokemon-hacking/ds-pokemon-hacking.github.io/docs/generation-iv/resources/hgss-town_map_spots/hgss-town_map_spots.md","tags":[],"version":"current","frontMatter":{},"sidebar":"generation_iv_sidebar","previous":{"title":"Resources","permalink":"/docs/category/resources"}}');var s=n(74848),i=n(28453);const d={},o="Town Map Spots",a={},c=[{value:"GearMapTownOverlay Struct Description",id:"gearmaptownoverlay-struct-description",level:3},{value:"GearMapTownSelectionOverlay Struct Description",id:"gearmaptownselectionoverlay-struct-description",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"town-map-spots",children:"Town Map Spots"})}),"\n",(0,s.jsxs)(t.p,{children:["These structures are used to describe the Town Map selectable structures in Heart Gold and Soul Silver as they appear baked into Overlay 101.  See ",(0,s.jsx)(t.a,{href:"../../guides/hgss-town_map/",children:"Editing the Town Map"})," for more information."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"gearmaptownoverlay-struct-description",children:"GearMapTownOverlay Struct Description"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c",children:"struct GearMapTownOverlay\r\n{\r\n    /* 0x0 */ u16 mapHeader;\r\n    /* 0x2 */ u16 gateAppearance; // not sure\r\n    /* 0x4 */ u8 entry; // maybe\r\n    /* 0x5 */ u8 entry2; // maybe\r\n    /* 0x6 */ u8 redX;\r\n    /* 0x7 */ u8 redY;\r\n    /* 0x8 */ u8 grayX;\r\n    /* 0x9 */ u8 grayY;\r\n    /* 0xA */ u8 townDimY:4; // msn\r\n              u8 townDimX:4; // lsn\r\n    /* 0xB */ u8 replacementDimY:4; // msn\r\n              u8 replacementDimX:4; // lsn\r\n    /* 0xC */ u8 offsetY:4; // msn\r\n              u8 offsetX:4; // lsn\r\n    /* 0xD */ u8 padding;\r\n}; // entry size = 0xE\n"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Field Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Data Type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"mapHeader"}),(0,s.jsx)(t.td,{children:"the map header that the entry describes"}),(0,s.jsx)(t.td,{children:"u16"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"gateAppearance"}),(0,s.jsx)(t.td,{children:"the map header that describes gates for the entry"}),(0,s.jsx)(t.td,{children:"u16"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"entry"}),(0,s.jsx)(t.td,{children:"the entry in this table (maybe?)"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"entry2"}),(0,s.jsx)(t.td,{children:"the entry in recorded visit (has player visited entry?)"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"redX"}),(0,s.jsx)(t.td,{children:"the base x coordinate for the red blocks (shifted right one)"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"redY"}),(0,s.jsx)(t.td,{children:"the base y coordinate for the red blocks (shifted up one)"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"grayX"}),(0,s.jsx)(t.td,{children:"the base x coordinate for the gray block on the image"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"grayY"}),(0,s.jsx)(t.td,{children:"the base y coordinate for the gray block on the image"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"townDimY"}),(0,s.jsx)(t.td,{children:"the amount of matrix chunks the town spans up and down"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"townDimX"}),(0,s.jsx)(t.td,{children:"the amount of matrix chunks the town spans left and right"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"offsetY"}),(0,s.jsx)(t.td,{children:"y offset within the replacement block of the actual town"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"offsetX"}),(0,s.jsx)(t.td,{children:"x offset within the replacement block of the actual town"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"padding"}),(0,s.jsx)(t.td,{children:"unused (ensures next entry is 2-byte aligned)"}),(0,s.jsx)(t.td,{children:"u8"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"gearmaptownselectionoverlay-struct-description",children:"GearMapTownSelectionOverlay Struct Description"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c",children:"struct GearMapTownSelectionOverlay\r\n{\r\n    /* 0x0 */ u16 mapHeader;\r\n    /* 0x2 */ u8 baseX; // in poke gear position\r\n    /* 0x3 */ u8 baseY; // in poke gear position\r\n    /* 0x4 */ u8 dimY:4; // msn\r\n              u8 dimX:4; // lsn\r\n    /* 0x5 */ u8 flags;\r\n    /* 0x6 */ u8 textEntry; // in a027 file 273\r\n    /* 0x7 */ u8 flySpot;\r\n    /* 0x8 */ u32 padding;\r\n    /* 0xC */ u8 orangeBaseX; // in image\r\n    /* 0xD */ u8 orangeBaseY; // in image\r\n    /* 0xE */ u8 orangeDimX; // in image\r\n    /* 0xF */ u8 orangeDimY; // in image\r\n}; // size = 0x10\n"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Field Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Data Type"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"mapHeader"}),(0,s.jsx)(t.td,{children:"the map header that the entry describes"}),(0,s.jsx)(t.td,{children:"u16"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"baseX"}),(0,s.jsx)(t.td,{children:"base x position in Pok\xe9Gear"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"baseY"}),(0,s.jsx)(t.td,{children:"base y position in Pok\xe9Gear"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"dimY"}),(0,s.jsx)(t.td,{children:"y dimension of selection overlay in tiles"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"dimX"}),(0,s.jsx)(t.td,{children:"x dimension of selection overlay in tiles"}),(0,s.jsx)(t.td,{children:"u8:4 (4 bits)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"flags"}),(0,s.jsx)(t.td,{children:"flags that seemingly control when/how things are shown"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"textEntry"}),(0,s.jsx)(t.td,{children:"text entry to use from a027 file 273 for the blurb"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"flySpot"}),(0,s.jsx)(t.td,{children:"towns with a fly spot have this nonzero"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"padding"}),(0,s.jsx)(t.td,{children:"unused field"}),(0,s.jsx)(t.td,{children:"u32"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"orangeBaseX"}),(0,s.jsx)(t.td,{children:"base x position in image of the orange overlay block"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"orangeBaseY"}),(0,s.jsx)(t.td,{children:"base y position in image of the orange overlay block"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"orangeDimX"}),(0,s.jsx)(t.td,{children:"x dimension in image of the orange overlay block"}),(0,s.jsx)(t.td,{children:"u8"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"orangeDimY"}),(0,s.jsx)(t.td,{children:"y dimension in image of the orange overlay block"}),(0,s.jsx)(t.td,{children:"u8"})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);